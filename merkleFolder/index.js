const { MerkleTree } = require('merkletreejs')
const SHA256 = require('crypto-js/sha256')

const whitelist = [
"0x8BB808CBa7ADEa840d506eA9bDf3adB4E3CA0f51",
"0x9e20Af05AB5FED467dFDd5bb5752F7d5410C832",
"0x85E1D9512A7eA9271C9418f9E6E61e9082948815",
"0x90043006de47DD70D8b90e27d75154BE0812Bfd9",
"0x419f8a6A18B2Ef4307Ecb4732BF55B5346532746",
"0x0568405264a332f93C9f4865370279e668C52E1a",
"0x5708956FF3988B01666BE3D96D26634f7a47153E",
"0xE6c29D03FA23Ff2B3561a3268cC026CC1192023B",
"0x854eCfF0798b5CD609580C66302270E567ACFD0C",
"0x91E0119D077A676f69Ba6d3895CFD39c49903b8f",
"0x2D8719Cf0fE19782140aE16eEc03938a96f5228b",
"0xB5834f3C59A891BBA5221099C6C1846CDdBf4a75",
"0xbF431B2DFe4b549614F0d5954C0351F89e7E728F",
"0x616F2EF297720E081eB69d4E4518f85572a6f8A1",
"0xB178bD23876Dd9f8aA60E7FdB0A2209Fe2D7a9AB",
"0xA995b19209255f1Bb3461A5A358943F332eE044B",
"0xb7d3dc568F7dF54d516D37739912Fc2E541Ba2fF",
"0x088043144c87EaC10068b77bdec89113E874f9Aa",
"0x4B3903952A25961B9E66216186Efd9B21903AEd3",
"0x49b5D07cbb8c360a8734DF82683B2FF4554eEFE7",
"0x490bf3ABcAb1fB5c88533d850F2a8d6D38298465",
"0x183a77E73643980F711755f5BAaA6681deaD23fe",
"0x4B322765D761984C0f9E72200B62a9b445F38caC",
"0x29A7953eB09EFB1f71eFe83bf1be18E6c823185e",
"0x66357dCaCe80431aee0A7507e2E361B7e2402370",
"0xda9434e626Dff1e4d07a8CA20ee856132894E775",
"0x1111111254fb6c44bAC0beD2854e76F90643097d",
"0x0Fca3ae6f4FF39bE775761372E9d9ba200c180ce",
"0x20fD3235B448Ee609314A1836Ba8Bf3f43bA4caD",
"0x21d7a1A909620AB6aA7BbC82451A40aE74631A67",
"0xb300Ff24BEb5284a6E7E2AA23360D33c850EfcbD",
"0x3a5AD6D61A10932442c28a5553530378D5aeb31e",
"0x449a13dEC9c55DA760a56Ec1C2Cc839584fF59fF",
"0xc1d9aAe86B3Df0597c905221a93141473eDb05d0",
"0xe7A102Fbc8AB3581d62830DdB599eCCaae5e7875",
"0xB81a47AefA6E6Ace247a879eF710D09899D8B63C",
"0x982bcE5186B5f5c1B435D3Df856004675eDE74cb",
"0x696f91696A77754CeD86B7fE7960F503E730d1a9",
"0x0613a0372008523D5e334D833268D38ad09E2731",
"0xE6C26772C72ab12159C06AE849B5d60BBf6F667e",
"0x684F914A8dEDF7fd7aFc97Ef60D6A71D490F1440",
"0x9A63a2dD86470fd7cDe157D73e8189EF6AC2fFBD",
"0x51F1bA147772f47f409f8fd320d1E26C2cD4c044",
"0x4e435a936a623f0f41919e94c2c195110E593d0b",
"0x8ac8007B9CAa7AA6eA1cD727C2F34BaCfB15E058",
"0x4a26B6bCbeDaca376616b39D91D1c55205079885",
"0xE7dC1d62e1e6C1528FD8FaF46FCCeC3a03BB13bd",
"0x0442271f9bb61e44eD63C1aB849EE0E2c5B361C9",
"0x5F719c2F1095F7B9fc68a68e35B51194f4b6abe8",
"0x759BaA697CC2f6237ADF1272F46dFbC9251a93A4",
"0x8352399a61201a0cD6f93727Bf92A8940B59e1f6",
"0xFDB38E2e0F1CFccabb95b3F824133B6B95f5b5F3",
"0xB5d6CdEc20963882A0d3DEF5a60AfD3223eC48c4",
"0x00000046DD6Dd4A5bFc26D9371217119435a730e",
"0x3fa6c84077E8Cb42299776A692cC6c51979640dE",
"0xcE81f589dB6798821694A7b84B008561207f145a",
"0xc6Dd219506D239eAE624fD59070e4d9762Ec98f8" ]

const leaves = whitelist.map(x => SHA256(x))
const tree = new MerkleTree(leaves, SHA256)
const root = tree.getRoot().toString('hex')
console.log("The  merkle root",root);
const leaf = SHA256("0xc6Dd219506D239eAE624fD59070e4d9762Ec98f8")
console.log("The  merkle leaf",leaf);
const proof = tree.getProof(leaf);
console.log("The  merkle proof",proof);
console.log(tree.verify(proof, leaf, root)) 
console.log("The tree",tree.toString())